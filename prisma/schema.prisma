// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  firstName  String
  lastName   String?
  email      String
  role       UserType     @default(CUSTOMER)
  comments   Comment[]
  resturants Restaurant[]
  ratings    Rating[]
}

enum UserType {
  SP
  CUSTOMER
}

model Comment {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  content      String
  user         User?    @relation(fields: [userId], references: [id])
  userId       String?  @db.ObjectId
  answers      Comment? @relation("answers")
  responseToId String?  @unique @db.ObjectId
  responseTo   Comment? @relation("answers", fields: [responseToId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Restaurant {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  name        String?
  description String?
  foodType    String?
  menu        Dish[]
  locations   Location[]
  user        User?      @relation(fields: [userId], references: [id])
  userId      String?    @db.ObjectId
  ratings     Rating[]
}

model Dish {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  name         String
  description  String?
  isVegan      Boolean     @default(false)
  isGlutenFree Boolean     @default(false)
  restaurant   Restaurant? @relation(fields: [restaurantId], references: [id])
  restaurantId String?     @db.ObjectId
}

enum WeekDay {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURNDAY
  SUNDAY
}

model Schedule {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  open_hour  DateTime?
  close_hour DateTime?
  day        DateTime?
}

model Location {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  streetName   String?
  streetNumber String?
  zip          String?
  city         String?
  country      String?
  restaurant   Restaurant? @relation(fields: [restaurantId], references: [id])
  restaurantId String?     @db.ObjectId
}

model Rating {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  value        Int         @default(0)
  restaurant   Restaurant? @relation(fields: [restaurantId], references: [id])
  restaurantId String?     @db.ObjectId
  user         User?       @relation(fields: [userId], references: [id])
  userId       String?     @db.ObjectId
}
